extern crate libc;

#[repr(u8)]
pub enum c_void {
  _x1,
}

#[repr(C)]
pub struct sockaddr {
  _data: [u8; 0],
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct kernel_timespec {
  pub tv_sec: i64,
  pub tv_nsec: i64,
}

extern "C" {
  pub fn close(fd: i32) -> i32;
  pub fn errno_to_int(e: i32) -> i32;
  pub fn write(fd: i32, buf: *const c_void, count: usize);
  pub fn rio_sockaddr_in_test(addr: libc::sockaddr_in) -> libc::sockaddr_in;
  pub fn rio_make_sockaddr_in(ipv4_addr: u32, port: u16) -> libc::sockaddr_in;

  pub fn rio_timespec_test(ts: kernel_timespec) -> kernel_timespec;
}

#[allow(clippy::too_many_lines)]
#[must_use]
pub fn errno(e: i32) -> Errno {
  assert!(e > 0, "errno values must be > 0");

  match unsafe { errno_to_int(e) } {
    x if x >= 0 => panic!("incorrect value returned from errno_to_int"),
    -1 => Errno::EPERM,
    -2 => Errno::ENOENT,
    -3 => Errno::ESRCH,
    -4 => Errno::EINTR,
    -5 => Errno::EIO,
    -6 => Errno::ENXIO,
    -7 => Errno::E2BIG,
    -8 => Errno::ENOEXEC,
    -9 => Errno::EBADF,
    -10 => Errno::ECHILD,
    -11 => Errno::EAGAIN,
    -12 => Errno::ENOMEM,
    -13 => Errno::EACCES,
    -14 => Errno::EFAULT,
    -15 => Errno::ENOTBLK,
    -16 => Errno::EBUSY,
    -17 => Errno::EEXIST,
    -18 => Errno::EXDEV,
    -19 => Errno::ENODEV,
    -20 => Errno::ENOTDIR,
    -21 => Errno::EISDIR,
    -22 => Errno::EINVAL,
    -23 => Errno::ENFILE,
    -24 => Errno::EMFILE,
    -25 => Errno::ENOTTY,
    -26 => Errno::ETXTBSY,
    -27 => Errno::EFBIG,
    -28 => Errno::ENOSPC,
    -29 => Errno::ESPIPE,
    -30 => Errno::EROFS,
    -31 => Errno::EMLINK,
    -32 => Errno::EPIPE,
    -33 => Errno::EDOM,
    -34 => Errno::ERANGE,
    -35 => Errno::EDEADLK,
    -36 => Errno::ENAMETOOLONG,
    -37 => Errno::ENOLCK,
    -38 => Errno::ENOSYS,
    -39 => Errno::ENOTEMPTY,
    -40 => Errno::ELOOP,
    -42 => Errno::ENOMSG,
    -43 => Errno::EIDRM,
    -44 => Errno::ECHRNG,
    -45 => Errno::EL2NSYNC,
    -46 => Errno::EL3HLT,
    -47 => Errno::EL3RST,
    -48 => Errno::ELNRNG,
    -49 => Errno::EUNATCH,
    -50 => Errno::ENOCSI,
    -51 => Errno::EL2HLT,
    -52 => Errno::EBADE,
    -53 => Errno::EBADR,
    -54 => Errno::EXFULL,
    -55 => Errno::ENOANO,
    -56 => Errno::EBADRQC,
    -57 => Errno::EBADSLT,
    -59 => Errno::EBFONT,
    -60 => Errno::ENOSTR,
    -61 => Errno::ENODATA,
    -62 => Errno::ETIME,
    -63 => Errno::ENOSR,
    -64 => Errno::ENONET,
    -65 => Errno::ENOPKG,
    -66 => Errno::EREMOTE,
    -67 => Errno::ENOLINK,
    -68 => Errno::EADV,
    -69 => Errno::ESRMNT,
    -70 => Errno::ECOMM,
    -71 => Errno::EPROTO,
    -72 => Errno::EMULTIHOP,
    -73 => Errno::EDOTDOT,
    -74 => Errno::EBADMSG,
    -75 => Errno::EOVERFLOW,
    -76 => Errno::ENOTUNIQ,
    -77 => Errno::EBADFD,
    -78 => Errno::EREMCHG,
    -79 => Errno::ELIBACC,
    -80 => Errno::ELIBBAD,
    -81 => Errno::ELIBSCN,
    -82 => Errno::ELIBMAX,
    -83 => Errno::ELIBEXEC,
    -84 => Errno::EILSEQ,
    -85 => Errno::ERESTART,
    -86 => Errno::ESTRPIPE,
    -87 => Errno::EUSERS,
    -88 => Errno::ENOTSOCK,
    -89 => Errno::EDESTADDRREQ,
    -90 => Errno::EMSGSIZE,
    -91 => Errno::EPROTOTYPE,
    -92 => Errno::ENOPROTOOPT,
    -93 => Errno::EPROTONOSUPPORT,
    -94 => Errno::ESOCKTNOSUPPORT,
    -95 => Errno::EOPNOTSUPP,
    -96 => Errno::EPFNOSUPPORT,
    -97 => Errno::EAFNOSUPPORT,
    -98 => Errno::EADDRINUSE,
    -99 => Errno::EADDRNOTAVAIL,
    -100 => Errno::ENETDOWN,
    -101 => Errno::ENETUNREACH,
    -102 => Errno::ENETRESET,
    -103 => Errno::ECONNABORTED,
    -104 => Errno::ECONNRESET,
    -105 => Errno::ENOBUFS,
    -106 => Errno::EISCONN,
    -107 => Errno::ENOTCONN,
    -108 => Errno::ESHUTDOWN,
    -109 => Errno::ETOOMANYREFS,
    -110 => Errno::ETIMEDOUT,
    -111 => Errno::ECONNREFUSED,
    -112 => Errno::EHOSTDOWN,
    -113 => Errno::EHOSTUNREACH,
    -114 => Errno::EALREADY,
    -115 => Errno::EINPROGRESS,
    -116 => Errno::ESTALE,
    -117 => Errno::EUCLEAN,
    -118 => Errno::ENOTNAM,
    -119 => Errno::ENAVAIL,
    -120 => Errno::EISNAM,
    -121 => Errno::EREMOTEIO,
    -122 => Errno::EDQUOT,
    -123 => Errno::ENOMEDIUM,
    -124 => Errno::EMEDIUMTYPE,
    -125 => Errno::ECANCELED,
    -126 => Errno::ENOKEY,
    -127 => Errno::EKEYEXPIRED,
    -128 => Errno::EKEYREVOKED,
    -129 => Errno::EKEYREJECTED,
    -130 => Errno::EOWNERDEAD,
    -131 => Errno::ENOTRECOVERABLE,
    -132 => Errno::ERFKILL,
    -133 => Errno::EHWPOISON,
    _ => Errno::RIO_UNKNOWN,
  }
}

impl std::fmt::Debug for Errno {
  fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
    match self {
      Self::ECANCELED => f.write_str("ecanceled"),
      Self::EADDRNOTAVAIL => f.write_str("eaddrnotavail"),
      Self::EINVAL => f.write_str("einval"),
      Self::ETIME => f.write_str("etime"),
      Self::RIO_UNKNOWN => f.write_str("encountered an unknown error"),
      _ => f.write_str("Unsupported error code"),
    }
  }
}

pub enum Errno {
  EPERM,
  ENOENT,
  ESRCH,
  EINTR,
  EIO,
  ENXIO,
  E2BIG,
  ENOEXEC,
  EBADF,
  ECHILD,
  EAGAIN,
  ENOMEM,
  EACCES,
  EFAULT,
  ENOTBLK,
  EBUSY,
  EEXIST,
  EXDEV,
  ENODEV,
  ENOTDIR,
  EISDIR,
  EINVAL,
  ENFILE,
  EMFILE,
  ENOTTY,
  ETXTBSY,
  EFBIG,
  ENOSPC,
  ESPIPE,
  EROFS,
  EMLINK,
  EPIPE,
  EDOM,
  ERANGE,
  EDEADLK,
  ENAMETOOLONG,
  ENOLCK,
  ENOSYS,
  ENOTEMPTY,
  ELOOP,
  ENOMSG,
  EIDRM,
  ECHRNG,
  EL2NSYNC,
  EL3HLT,
  EL3RST,
  ELNRNG,
  EUNATCH,
  ENOCSI,
  EL2HLT,
  EBADE,
  EBADR,
  EXFULL,
  ENOANO,
  EBADRQC,
  EBADSLT,
  EBFONT,
  ENOSTR,
  ENODATA,
  ETIME,
  ENOSR,
  ENONET,
  ENOPKG,
  EREMOTE,
  ENOLINK,
  EADV,
  ESRMNT,
  ECOMM,
  EPROTO,
  EMULTIHOP,
  EDOTDOT,
  EBADMSG,
  EOVERFLOW,
  ENOTUNIQ,
  EBADFD,
  EREMCHG,
  ELIBACC,
  ELIBBAD,
  ELIBSCN,
  ELIBMAX,
  ELIBEXEC,
  EILSEQ,
  ERESTART,
  ESTRPIPE,
  EUSERS,
  ENOTSOCK,
  EDESTADDRREQ,
  EMSGSIZE,
  EPROTOTYPE,
  ENOPROTOOPT,
  EPROTONOSUPPORT,
  ESOCKTNOSUPPORT,
  EOPNOTSUPP,
  EPFNOSUPPORT,
  EAFNOSUPPORT,
  EADDRINUSE,
  EADDRNOTAVAIL,
  ENETDOWN,
  ENETUNREACH,
  ENETRESET,
  ECONNABORTED,
  ECONNRESET,
  ENOBUFS,
  EISCONN,
  ENOTCONN,
  ESHUTDOWN,
  ETOOMANYREFS,
  ETIMEDOUT,
  ECONNREFUSED,
  EHOSTDOWN,
  EHOSTUNREACH,
  EALREADY,
  EINPROGRESS,
  ESTALE,
  EUCLEAN,
  ENOTNAM,
  ENAVAIL,
  EISNAM,
  EREMOTEIO,
  EDQUOT,
  ENOMEDIUM,
  EMEDIUMTYPE,
  ECANCELED,
  ENOKEY,
  EKEYEXPIRED,
  EKEYREVOKED,
  EKEYREJECTED,
  EOWNERDEAD,
  ENOTRECOVERABLE,
  ERFKILL,
  EHWPOISON,
  RIO_UNKNOWN,
}
